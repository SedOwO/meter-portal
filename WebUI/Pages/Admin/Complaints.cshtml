@page
@model WebUI.Pages.Admin.ComplaintsModel
@{
    ViewData["Title"] = "Manage Complaints";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

<div class="d-flex justify-content-between align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Manage Complaints</h1>
    <div class="btn-group">
        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="location.reload()">
            <i class="bi bi-arrow-clockwise"></i> Refresh
        </button>
    </div>
</div>

@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle"></i> @Model.SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle"></i> @Model.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0"><i class="bi bi-file-earmark-text"></i> All Complaints</h5>
        <div class="d-flex align-items-center">
            <span class="text-muted me-3">
                Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) -
                @Math.Min(Model.CurrentPage * Model.PageSize, Model.PagedComplaints.Pagination.TotalCount)
                of @Model.PagedComplaints.Pagination.TotalCount
            </span>
            <select class="form-select form-select-sm" style="width: auto;" onchange="changePageSize(this.value)">
                <option value="5" selected="@(Model.PageSize == 5)">5 per page</option>
                <option value="10" selected="@(Model.PageSize == 10)">10 per page</option>
                <option value="25" selected="@(Model.PageSize == 25)">25 per page</option>
                <option value="50" selected="@(Model.PageSize == 50)">50 per page</option>
            </select>
        </div>
    </div>
    <div class="card-body">
        @if (Model.PagedComplaints == null || !Model.PagedComplaints.Items.Any())
        {
            <div class="text-center text-muted py-5">
                <i class="bi bi-inbox fs-1"></i>
                <p class="mt-2">No complaints found</p>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Consumer ID</th>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Status</th>
                            <th>Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var complaint in Model.PagedComplaints.Items)
                        {
                            <tr>
                                <td><strong>#@complaint.ComplaintId</strong></td>
                                <td>@complaint.ConsumerId</td>
                                <td>@complaint.Title</td>
                                <td>
                                    @if (complaint.Description.Length > 50)
                                    {
                                        <span data-bs-toggle="tooltip" title="@complaint.Description">
                                            @complaint.Description.Substring(0, 50)...
                                        </span>
                                    }
                                    else
                                    {
                                        @complaint.Description
                                    }
                                </td>
                                <td>
                                    @{
                                        var badgeClass = complaint.Status switch
                                        {
                                            "open" => "bg-warning",
                                            "in_progress" => "bg-info",
                                            "resolved" => "bg-success",
                                            "closed" => "bg-secondary",
                                            _ => "bg-secondary"
                                        };
                                    }
                                    <span class="badge @badgeClass">@complaint.Status</span>
                                </td>
                                <td>@complaint.UpdatedAt.ToString("MMM dd, yyyy")</td>
                                <td>
                                    @* <button type="button" class="btn btn-sm btn-primary"
                                            data-bs-toggle="modal"
                                            data-bs-target="#updateModal@complaint.ComplaintId">
                                        <i class="bi bi-pencil"></i> Update
                                    </button> *@

                                    <button type="button" class="btn btn-primary"
                                            data-bs-toggle="modal"
                                            data-id="@complaint.ComplaintId"
                                            data-title="@complaint.Title"
                                            data-description="@complaint.Description"
                                            onclick="openUpdateModal(this)">
                                        Update
                                    </button>

                                </td>
                            </tr>
                            @* <div class="modal fade" id="updateModal@complaint.ComplaintId" tabindex="-1">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <form method="post" asp-page-handler="UpdateStatus">
                                            <div class="modal-header">
                                                <h5 class="modal-title">Update Complaint #@complaint.ComplaintId</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                            </div>
                                            <div class="modal-body">
                                                <input type="hidden" asp-for="ComplaintId" value="@complaint.ComplaintId" />

                                                <div class="mb-3">
                                                    <label class="form-label"><strong>Title:</strong></label>
                                                    <p>@complaint.Title</p>
                                                </div>

                                                <div class="mb-3">
                                                    <label class="form-label"><strong>Description:</strong></label>
                                                    <p>@complaint.Description</p>
                                                </div>

                                                <div class="mb-3">
                                                    <label asp-for="Status" class="form-label">Update Status</label>
                                                    <select asp-for="Status" class="form-select">
                                                        <option value="open" selected="@(complaint.Status == "open")">Open</option>
                                                        <option value="in_progress" selected="@(complaint.Status == "in_progress")">In Progress</option>
                                                        <option value="resolved" selected="@(complaint.Status == "resolved")">Resolved</option>
                                                        <option value="closed" selected="@(complaint.Status == "closed")">Closed</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                <button type="submit" class="btn btn-primary">Update Status</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div> *@

                        }
                    </tbody>
                </table>

                <!-- Update Modal -->
                <div class="modal fade" id="updateModal" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <form method="post" asp-page-handler="UpdateStatus">
                                <div class="modal-header">
                                    <h5 class="modal-title">Update Complaint</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    @* <input type="hidden" asp-for="ComplaintId" value="@complaint.ComplaintId" /> *@
                                    <input type="hidden" id="modalComplaintId" name="ComplaintId" />

                                    <div class="mb-3">
                                        <label class="form-label"><strong>Title:</strong></label>
                                        <p id="modalTitle"></p>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label"><strong>Description:</strong></label>
                                        <p id="modalDescription"></p>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Update Status</label>
                                        <select id="modalStatus" name="Status" class="form-select">
                                            <option value="open">Open</option>
                                            <option value="in_progress">In Progress</option>
                                            <option value="resolved">Resolved</option>
                                            <option value="closed">Closed</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="submit" class="btn btn-primary">Update Status</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Pagination -->
            @if (Model.PagedComplaints.Pagination.TotalPages > 1)
            {
                <nav aria-label="Complaints pagination" class="mt-3">
                    <ul class="pagination justify-content-center">
                        <!-- First Page -->
                        <li class="page-item @(!Model.PagedComplaints.Pagination.HasPreviousPage ? "disabled" : "")">
                            <a class="page-link" href="?CurrentPage=1&PageSize=@Model.PageSize">
                                <i class="bi bi-chevron-double-left"></i>
                            </a>
                        </li>

                        <!-- Previous Page -->
                        <li class="page-item @(!Model.PagedComplaints.Pagination.HasPreviousPage ? "disabled" : "")">
                            <a class="page-link" href="?CurrentPage=@(Model.CurrentPage - 1)&PageSize=@Model.PageSize">
                                <i class="bi bi-chevron-left"></i>
                            </a>
                        </li>

                        <!-- Page Numbers -->
                        @{
                            var startPage = Math.Max(1, Model.CurrentPage - 2);
                            var endPage = Math.Min(Model.PagedComplaints.Pagination.TotalPages, Model.CurrentPage + 2);
                        }

                        @if (startPage > 1)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }

                        @for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="?CurrentPage=@i&PageSize=@Model.PageSize">@i</a>
                            </li>
                        }

                        @if (endPage < Model.PagedComplaints.Pagination.TotalPages)
                        {
                            <li class="page-item disabled">
                                <span class="page-link">...</span>
                            </li>
                        }

                        <!-- Next Page -->
                        <li class="page-item @(!Model.PagedComplaints.Pagination.HasNextPage ? "disabled" : "")">
                            <a class="page-link" href="?CurrentPage=@(Model.CurrentPage + 1)&PageSize=@Model.PageSize">
                                <i class="bi bi-chevron-right"></i>
                            </a>
                        </li>

                        <!-- Last Page -->
                        <li class="page-item @(!Model.PagedComplaints.Pagination.HasNextPage ? "disabled" : "")">
                            <a class="page-link" href="?CurrentPage=@Model.PagedComplaints.Pagination.TotalPages&PageSize=@Model.PageSize">
                                <i class="bi bi-chevron-double-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>

                <!-- Pagination Info -->
                <div class="text-center text-muted">
                    <small>
                        Page @Model.CurrentPage of @Model.PagedComplaints.Pagination.TotalPages
                        | Total: @Model.PagedComplaints.Pagination.TotalCount complaints
                    </small>
                </div>
            }

            <!-- Summary -->
            <div class="alert alert-info mt-3">
                <div class="row">
                    <div class="col-md-3">
                        <strong>Total:</strong> @Model.PagedComplaints.Pagination.TotalCount
                    </div>
                    <div class="col-md-3">
                        <strong>Open:</strong> @Model.PagedComplaints.Items.Count(c => c.Status == "open")
                    </div>
                    <div class="col-md-3">
                        <strong>In Progress:</strong> @Model.PagedComplaints.Items.Count(c => c.Status == "in_progress")
                    </div>
                    <div class="col-md-3">
                        <strong>Resolved:</strong> @Model.PagedComplaints.Items.Count(c => c.Status == "resolved")
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function changePageSize(pageSize) {
            window.location.href = '?CurrentPage=1&PageSize=' + pageSize;
        }

        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })
        function openUpdateModal(button) {
            document.getElementById('modalComplaintId').value = button.dataset.id;
            document.getElementById('modalTitle').textContent = button.dataset.title;
            document.getElementById('modalDescription').textContent = button.dataset.description;

            var modal = new bootstrap.Modal(document.getElementById('updateModal'));
            modal.show();
        }
    </script>
}
